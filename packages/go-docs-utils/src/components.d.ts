/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { IProp } from "./components/demo-components/demo-playground/prop.type";
import { ISlot } from "./components/demo-components/demo-playground/slot.type";
export namespace Components {
    interface DarkModeToggle {
    }
    interface DemoControls {
    }
    interface PropsPanel {
        "debug": boolean;
        "values": IProp[];
    }
    interface SlotsPanel {
        "debug": boolean;
        "values": ISlot[];
    }
    interface WcOutput {
        "usage": string;
    }
    interface WcPlayground {
        "block": boolean;
        "code": string;
        "props": IProp[] | string;
        "slots": ISlot[] | string;
        /**
          * query selector for the component to apply props to
         */
        "tag": string;
    }
}
declare global {
    interface HTMLDarkModeToggleElement extends Components.DarkModeToggle, HTMLStencilElement {
    }
    var HTMLDarkModeToggleElement: {
        prototype: HTMLDarkModeToggleElement;
        new (): HTMLDarkModeToggleElement;
    };
    interface HTMLDemoControlsElement extends Components.DemoControls, HTMLStencilElement {
    }
    var HTMLDemoControlsElement: {
        prototype: HTMLDemoControlsElement;
        new (): HTMLDemoControlsElement;
    };
    interface HTMLPropsPanelElement extends Components.PropsPanel, HTMLStencilElement {
    }
    var HTMLPropsPanelElement: {
        prototype: HTMLPropsPanelElement;
        new (): HTMLPropsPanelElement;
    };
    interface HTMLSlotsPanelElement extends Components.SlotsPanel, HTMLStencilElement {
    }
    var HTMLSlotsPanelElement: {
        prototype: HTMLSlotsPanelElement;
        new (): HTMLSlotsPanelElement;
    };
    interface HTMLWcOutputElement extends Components.WcOutput, HTMLStencilElement {
    }
    var HTMLWcOutputElement: {
        prototype: HTMLWcOutputElement;
        new (): HTMLWcOutputElement;
    };
    interface HTMLWcPlaygroundElement extends Components.WcPlayground, HTMLStencilElement {
    }
    var HTMLWcPlaygroundElement: {
        prototype: HTMLWcPlaygroundElement;
        new (): HTMLWcPlaygroundElement;
    };
    interface HTMLElementTagNameMap {
        "dark-mode-toggle": HTMLDarkModeToggleElement;
        "demo-controls": HTMLDemoControlsElement;
        "props-panel": HTMLPropsPanelElement;
        "slots-panel": HTMLSlotsPanelElement;
        "wc-output": HTMLWcOutputElement;
        "wc-playground": HTMLWcPlaygroundElement;
    }
}
declare namespace LocalJSX {
    interface DarkModeToggle {
    }
    interface DemoControls {
    }
    interface PropsPanel {
        "debug"?: boolean;
        "onPropChange"?: (event: CustomEvent<IProp[]>) => void;
        "values"?: IProp[];
    }
    interface SlotsPanel {
        "debug"?: boolean;
        "onSlotDisplayChange"?: (event: CustomEvent<ISlot[]>) => void;
        "values"?: ISlot[];
    }
    interface WcOutput {
        "onCopyCode"?: (event: CustomEvent<any>) => void;
        "usage"?: string;
    }
    interface WcPlayground {
        "block"?: boolean;
        "code"?: string;
        "onLoaded"?: (event: CustomEvent<HTMLElement>) => void;
        "props"?: IProp[] | string;
        "slots"?: ISlot[] | string;
        /**
          * query selector for the component to apply props to
         */
        "tag"?: string;
    }
    interface IntrinsicElements {
        "dark-mode-toggle": DarkModeToggle;
        "demo-controls": DemoControls;
        "props-panel": PropsPanel;
        "slots-panel": SlotsPanel;
        "wc-output": WcOutput;
        "wc-playground": WcPlayground;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "dark-mode-toggle": LocalJSX.DarkModeToggle & JSXBase.HTMLAttributes<HTMLDarkModeToggleElement>;
            "demo-controls": LocalJSX.DemoControls & JSXBase.HTMLAttributes<HTMLDemoControlsElement>;
            "props-panel": LocalJSX.PropsPanel & JSXBase.HTMLAttributes<HTMLPropsPanelElement>;
            "slots-panel": LocalJSX.SlotsPanel & JSXBase.HTMLAttributes<HTMLSlotsPanelElement>;
            "wc-output": LocalJSX.WcOutput & JSXBase.HTMLAttributes<HTMLWcOutputElement>;
            "wc-playground": LocalJSX.WcPlayground & JSXBase.HTMLAttributes<HTMLWcPlaygroundElement>;
        }
    }
}
