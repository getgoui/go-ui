/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ColorVariants } from "./types";
export namespace Components {
    interface GovButton {
        /**
          * If set, the button will take up the full width of its parent
         */
        "block"?: boolean;
        /**
          * If this button is disabled
         */
        "disabled"?: boolean;
        /**
          * If `outlined` is true, the button will have a border based on selected variant
          * @see  `variant` property
         */
        "outlined"?: boolean;
        /**
          * Html type of the button
         */
        "type": 'submit' | 'reset' | 'button';
        /**
          * Button variant
         */
        "variant"?: ColorVariants;
    }
    interface GovHeader {
    }
}
declare global {
    interface HTMLGovButtonElement extends Components.GovButton, HTMLStencilElement {
    }
    var HTMLGovButtonElement: {
        prototype: HTMLGovButtonElement;
        new (): HTMLGovButtonElement;
    };
    interface HTMLGovHeaderElement extends Components.GovHeader, HTMLStencilElement {
    }
    var HTMLGovHeaderElement: {
        prototype: HTMLGovHeaderElement;
        new (): HTMLGovHeaderElement;
    };
    interface HTMLElementTagNameMap {
        "gov-button": HTMLGovButtonElement;
        "gov-header": HTMLGovHeaderElement;
    }
}
declare namespace LocalJSX {
    interface GovButton {
        /**
          * If set, the button will take up the full width of its parent
         */
        "block"?: boolean;
        /**
          * If this button is disabled
         */
        "disabled"?: boolean;
        /**
          * If `outlined` is true, the button will have a border based on selected variant
          * @see  `variant` property
         */
        "outlined"?: boolean;
        /**
          * Html type of the button
         */
        "type"?: 'submit' | 'reset' | 'button';
        /**
          * Button variant
         */
        "variant"?: ColorVariants;
    }
    interface GovHeader {
    }
    interface IntrinsicElements {
        "gov-button": GovButton;
        "gov-header": GovHeader;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gov-button": LocalJSX.GovButton & JSXBase.HTMLAttributes<HTMLGovButtonElement>;
            "gov-header": LocalJSX.GovHeader & JSXBase.HTMLAttributes<HTMLGovHeaderElement>;
        }
    }
}
